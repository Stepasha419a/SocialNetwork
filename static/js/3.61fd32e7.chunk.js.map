{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/ProfileInfo/MyPostForm/MyPostForm.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.js","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","handleSubmit","onSubmit","CreateField","required","Textarea","type","MyPosts","posts","addPost","postsElements","map","post","postsBlock","values","newPostText","MyPostsContainer","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","contactMaker","contact","link","ProfileInfo","profile","descriptionBlock","photos","large","userPhoto","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","UserId","isAuth","withRouter"],"mappings":"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","file":"static/js/3.61fd32e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2WXhY\",\"posts\":\"MyPosts_posts__3gXdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1R9gh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__b9bzy\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://avatars.mds.yandex.net/get-ott/374297/2a000001616b87458162c9216ccd5144e94d/678x380' alt={'fail load'} />\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../../../utilits/validators/validators'\r\nimport { Textarea } from '../../../../common/FormsControls/FormsControls'\r\nimport { CreateField } from '../../../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = ({ handleSubmit }) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {CreateField(null, 'newPostText', [required, maxLength10], Textarea)}\r\n            <div>\r\n                <button type={'submit'}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet MyPostReduxForm = reduxForm({\r\n    form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPostReduxForm","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport MyPostReduxForm from './ProfileInfo/MyPostForm/MyPostForm'\r\n\r\nconst MyPosts = ({ posts, addPost }) => {\r\n\r\n    let postsElements = posts.map((post) => <Post message={post.message} likesCount={post.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <MyPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import { addPost } from './../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const diactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>Status: {props.status || 'Status is Undefinded'}</span>\r\n                </div>\r\n            }\r\n            {editMode\r\n                &&\r\n                <div>\r\n                    <span>edit status: </span>\r\n                    <input autoFocus={true} onBlur={diactivateMode} onChange={onStatusChange} value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\nimport userPhoto from '../../../../assets/images/defaultIcon.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst contactMaker = (contact, link) => {\r\n    if (!link) {\r\n        return (\r\n            null\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {contact}: {link}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img src='https://i.pinimg.com/originals/eb/22/6c/eb226c61b2925659cfd02f6b38ccf921.jpg' alt={'fail load'}></img>\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : userPhoto} alt='fail load'></img>\r\n                <div>\r\n                    <div>\r\n                        name: {profile.fullName}\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                    <div>\r\n                        about me: {profile.aboutMe}\r\n                    </div>\r\n                    <div>\r\n                        {profile.lookingForAJob ? <div>Finding a work</div> : <div>Is't finding a work</div>}\r\n                    </div>\r\n                    <div>{profile.lookingForAJob ? <div> Description for a finding work: {profile.lookingForAJobDescription}</div> : null} </div>\r\n                    <div>\r\n                        My contacts:\r\n                        {contactMaker('facebook', profile.contacts.facebook)}\r\n                        {contactMaker('website', profile.contacts.website)}\r\n                        {contactMaker('vk', profile.contacts.vk)}\r\n                        {contactMaker('twitter', profile.contacts.twitter)}\r\n                        {contactMaker('instagram', profile.contacts.instagram)}\r\n                        {contactMaker('youtube', profile.contacts.youtube)}\r\n                        {contactMaker('github', profile.contacts.github)}\r\n                        {contactMaker('mainLink', profile.contacts.mainLink)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.UserId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}