{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.js","Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/DialogsForm/DialogsForm.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","src","image","alt","dialogItem","to","name","Message","message","maxLength15","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","value","newMessageBody","validate","required","type","Dialogs","dialogsPage","dialogElements","dialogs","map","messageElements","messages","dialogsItems","formData","console","log","sendMessage","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,mICGrPC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,kCCURE,EAVI,SAACC,GAChB,IAAIC,EAAO,WAAaD,EAAME,GAE9B,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,qBAAKC,IAAKC,IAAOC,IAAK,cACtB,cAAC,IAAD,CAASL,UAAWC,IAAEK,WAAYC,GAAIT,EAAtC,SAA6CD,EAAMW,WCHhDC,EALC,SAACZ,GACb,OACI,qBAAKG,UAAWC,IAAES,QAAlB,SAA4Bb,EAAMa,W,iCCApCC,EAAcC,YAAiB,IAetBC,EAJaC,YAAU,CAClCC,KAAM,wBADkBD,EATL,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BAAK,cAACC,EAAA,EAAD,CAAOV,KAAM,iBAAkBW,UAAWC,IAAUC,MAAOxB,EAAMyB,eAAgBC,SAAU,CAACC,IAAUb,OAC3G,8BAAK,wBAAQc,KAAM,SAAd,0BCyBFC,EA7BC,SAAC7B,GAEb,IAAKA,EAAMH,OAAQ,OAAO,cAAC,IAAD,CAAUa,GAAG,WAEvC,IAAId,EAAQI,EAAM8B,YAEdC,EAAiBnC,EAAMoC,QAAQC,KAAI,SAAA5B,GAAM,OAAI,cAAC,EAAD,CAAYM,KAAMN,EAAOM,KAAsBT,GAAIG,EAAOH,IAAtBG,EAAOH,OACxFgC,EAAkBtC,EAAMuC,SAASF,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQX,OAChGuB,EAAiB7B,EAAM6B,eAO3B,OACI,sBAAKtB,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAEgC,aAAlB,SACKL,IAEL,qBAAK5B,UAAWC,IAAE+B,SAAlB,SACI,gCAAMD,EAAgB,wBAClB,cAAC,EAAD,CAAgBf,SAZZ,SAACkB,GACjBC,QAAQC,IAAIF,GACZrC,EAAMwC,YAAYH,EAASZ,iBAU0BA,eAAgBA,a,QCT9DgB,sBACXC,aAfkB,SAAC9C,GACnB,MAAO,CACHkC,YAAalC,EAAMkC,gBAIF,SAACa,GACtB,MAAO,CACHH,YAAa,SAACf,GACVkB,EAASC,YAAmBnB,ULPR,SAACoB,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMH,OACT,cAACgD,EAAD,eAAeE,KAAK/C,QADI,cAAC,IAAD,CAAUU,GAAG,eAHT,GACXsC,IAAMH,WAQtC,OADqCH,YAAQ/C,EAAR+C,CAAoCI,KKI9DL,CAGbZ","file":"static/js/4.da1e1dc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xp4L\",\"dialogsItems\":\"Dialogs_dialogsItems__1h0Fr\",\"dialog\":\"Dialogs_dialog__2rCpF\",\"active\":\"Dialogs_active__1gAP3\",\"messages\":\"Dialogs_messages__3BnXf\",\"message\":\"Dialogs_message__1_Ih0\",\"dialogItem\":\"Dialogs_dialogItem__CfNnJ\"};","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport image from '../../../assets/images/defaultIcon.png'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialog/' + props.id\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={image} alt={'fail load'} />\r\n            <NavLink className={s.dialogItem} to={path}>{props.name}</NavLink>\r\n        </div >\r\n    )\r\n}\r\nexport default DialogItem","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message","import React from 'react'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utilits/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'newMessageBody'} component={Textarea} value={props.newMessageBody} validate={[required, maxLength15]}></Field></div>\r\n            <div><button type={'submit'}>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AddMessageForm from './DialogsForm/DialogsForm'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />)\r\n    let messageElements = state.messages.map(message => <Message message={message.message} key={message.id} />)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let addNewMessage = (formData) => {\r\n        console.log(formData)\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}<div />\r\n                    <AddMessageForm onSubmit={addNewMessage} newMessageBody={newMessageBody} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { sendMessageCreator } from './../../redux/dialogsReducer'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport Dialogs from './Dialogs'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}